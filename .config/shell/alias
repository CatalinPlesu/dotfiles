#!/bin/sh
alias ls='ls --color=auto'
alias la='ls -a --color=auto'
alias l='ls -l --color=auto'
alias lah='ls -lah --color=auto'
alias grep='grep --color=auto'

alias lls='ls | lolcat'

alias s='doas pacman -S'
alias ss='pacman -Ss'
alias i='pacman -Si'
alias r='doas pacman -Rsn'
alias y='yay -S'
alias q='pacman -Q'
alias ar='doas pacman -Rcns $(pacman -Qdtq)'

alias gad='git add'
alias gst='git status'
alias ecm='git commit --allow-empty-message'
alias gph='git push'
alias gcl='git clone `xclip -out -selection clipboard`'
alias gco='git checkout'
alias glt='git log --oneline --decorate --graph --all'
alias glta='git log --graph --pretty='\''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'\'' --all'

alias vim='nvim'
alias v='nvim'

alias z="zathura"

alias note='cd ~/Documents/notes && vim index.md'
alias anime='cd ~/Documents/notes && vim Journal/Entertaiment/index.md'
alias qnote='nvim ~/Documents/notes/QuickNote.md'
alias todo='cd ~/Documents/notes && vim todo.txt'
alias ntbak='rsync /home/catalin/Documents/notes/ /media/catalin/catalin/notes -r'

alias evim="nvim ~/.config/nvim/init.vim"
alias eqtile="nvim ~/.config/qtile/config.py"
alias equtebrowser="nvim ~/.config/qutebrowser/config.py"
alias esxhkd="nvim ~/.config/sxhkd/sxhkdrc"
alias esh="nvim ~/.config/shell/alias"
alias erofi="nvim ~/.config/rofi/config.rasi"

alias myip="curl http://ipecho.net/plain; echo"
alias o="xdg-open"
alias now="date +%d_%m_%Y"

ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.tar.xz)    tar xJf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}
